<?xml version="1.0"?>
<launch>

  <!-- rosrun starts a single node, while roslaunch can start many nodes at once. -->
  <!-- before starting ang nodes, roslaunch will determine whether roscore is already running, if not, start it automatically. -->

  <!-- turtlesim_node: generate turtle instance -->
  <!-- same as command: $ rosrun turtlesim turtlesim_node -->
  <node pkg="turtlesim" type="turtlesim_node" name="turtlesim" respawn="true"/>

  <!-- this is used for calling spawn service to spawn another turtle -->
  <node pkg="lab2pkg_turtle" type="turtle_spawn.py" name="turtle_spawn" output="screen"/> 

  <!-- turtlesim_teleop_key: teleoperate turtle with keyboard input -->
  <!-- same as command: $ rosrun turtlesim turtlesim_teleop_key -->
  <node pkg="turtlesim" type="turtle_teleop_key" name="teleop_key" required="true" launch-prefix="xterm -e"/>

  <!-- tf broadcaster to broadcast a tranform between world and turtle1-->
  <node pkg="lab2pkg_turtle" type="turtle_tf2_broadcaster.py" name="turtle1_tf2_broadcaster" respawn="false" output="screen" >
    <param name="turtle" type="string" value="turtle1" />
  </node>

  <!-- tf broadcaster to broadcast a tranform between world and turtle2-->
  <node pkg="lab2pkg_turtle" type="turtle_tf2_broadcaster.py" name="turtle2_tf2_broadcaster" respawn="false" output="screen" >
    <param name="turtle" type="string" value="turtle2" />
  </node>

  <!-- <node pkg="rviz" type="rviz" name="rviz" args="-d $(find lab2pkg_turtle)/config/turtle_rviz.rviz"/> -->

</launch>
